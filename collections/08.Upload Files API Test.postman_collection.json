{
	"info": {
		"_postman_id": "5cf4c470-3fc6-41b1-83f6-971b23964cb3",
		"name": "08.Upload Files API Test",
		"description": "This collection contains requests for testing single and multiple file upload endpoints of a Node.js Express API. It also includes basic tests for validating response structure, headers, and error handling.\n\nThe API was created with the help of **ChatGPT.**\n\n**Highlights:**\n\n- **Single File Upload:** Test uploading a single file and validate the response structure, headers, and status code.\n    \n- **No File Upload:** Test sending a request without any file to verify proper error handling.\n    \n- **Multiple Files Upload:** Test uploading multiple files simultaneously and validate the returned array of file metadata.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23846288",
		"_collection_link": "https://speeding-escape-891515.postman.co/workspace/API-testing-with-Postman---Prac~1ee97430-877e-4c34-a2f4-cdba9b060fc6/collection/23846288-5cf4c470-3fc6-41b1-83f6-971b23964cb3?action=share&source=collection_link&creator=23846288"
	},
	"item": [
		{
			"name": "Single File Upload",
			"item": [
				{
					"name": "TC001_Valid Text File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"POST /uploadFile - Status should be 200 or 201.\", () => {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]); // 200 for success, 201 for created",
									"})",
									"",
									"pm.test(\"Content Type Header should be application/json.\", () => {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"})",
									"",
									"pm.test(\"Response time should be less than 2000ms.\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000); // 2000ms = 2s",
									"})",
									"",
									"let jsonData = pm.response.json();",
									"pm.test(\"File type should be .txt\", function () {",
									"    const fileType = jsonData.fileType;",
									"    pm.expect(fileType).to.equal(\"text/plain\");",
									"});",
									"",
									"console.log(pm.response.text());",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/Users/wine/Documents/04_Projects/api-demo/upload_files_api_demo/test_files/sample_01.txt"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/uploadFile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"uploadFile"
							]
						}
					},
					"response": []
				},
				{
					"name": "TC002_Without file",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"POST /uploadFile - Status should be 400.\", () => {",
									"    pm.response.to.have.status(400);",
									"})",
									"",
									"pm.test(\"Content Type Header should be application/json.\", () => {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"})",
									"",
									"pm.test(\"Response time should be less than 2000ms.\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000); // 2000ms = 2s",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/uploadFile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"uploadFile"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"pm.environment.set(\"base_url\", \"http://localhost:3000\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Multi Files Upload",
			"item": [
				{
					"name": "Valid files",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"POST /uploadMultipleFiles - Status code should be 200 or 201\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Content Type Header should be application/json.\", () => {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"})",
									"",
									"pm.test(\"Response time should be less than 2000ms.\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(2000); // 2000ms = 2s",
									"})",
									"",
									"let jsonData = pm.response.json();",
									"",
									"pm.test(\"Response contains multiple files\", function () {",
									"    pm.expect(jsonData).to.be.an(\"array\");",
									"    pm.expect(jsonData.length).to.be.above(1);",
									"});",
									"",
									"pm.test(\"Each file has required fields\", function () {",
									"    jsonData.forEach(file => {",
									"        pm.expect(file).to.have.property(\"fileName\");",
									"        pm.expect(file).to.have.property(\"fileType\");",
									"        pm.expect(file).to.have.property(\"size\");",
									"    });",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "files",
									"type": "file",
									"src": [
										"/Users/wine/Documents/04_Projects/api-demo/upload_files_api_demo/test_files/sample_02.txt",
										"/Users/wine/Documents/04_Projects/api-demo/upload_files_api_demo/test_files/sample_03.txt",
										"/Users/wine/Downloads/_ (4).jpeg"
									]
								},
								{
									"key": "file",
									"type": "file",
									"src": "/Users/wine/Documents/04_Projects/api-demo/upload_files_api_demo/test_files/sample_03.txt",
									"disabled": true
								},
								{
									"key": "file",
									"type": "file",
									"src": "/Users/wine/Documents/04_Projects/api-demo/upload_files_api_demo/test_files/sample_01.txt",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/uploadMultipleFiles",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"uploadMultipleFiles"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"pm.environment.set(\"base_url\", \"http://localhost:3000\")"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "{{base_url}}",
			"value": "http://localhost:3000",
			"type": "string",
			"disabled": true
		}
	]
}