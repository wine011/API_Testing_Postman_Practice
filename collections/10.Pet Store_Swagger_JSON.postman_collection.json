{
	"info": {
		"_postman_id": "689e54a9-7575-4485-80c7-ef5a0c5f8e97",
		"name": "10.Pet Store_Swagger_JSON",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23846288",
		"_collection_link": "https://speeding-escape-891515.postman.co/workspace/API-testing-with-Postman---Prac~1ee97430-877e-4c34-a2f4-cdba9b060fc6/collection/23846288-689e54a9-7575-4485-80c7-ef5a0c5f8e97?action=share&source=collection_link&creator=23846288"
	},
	"item": [
		{
			"name": "https://petstore.swagger.io/v2/pet",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 12,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dog\"\n  },\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"https://example.com/photos/buddy.jpg\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"friendly\"\n    }\n  ],\n  \"status\": \"available\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/pet",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"pet"
					]
				},
				"description": "Generated from cURL: curl -X 'POST' \\\n  'https://petstore.swagger.io/v2/pet' \\\n  -H 'accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"id\": 12,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dog\"\n  },\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"https://example.com/photos/buddy.jpg\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"friendly\"\n    }\n  ],\n  \"status\": \"available\"\n}'"
			},
			"response": []
		},
		{
			"name": "Create user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Generate random number between 1 and 100",
							"const random_num = Math.floor(Math.random() * 100) + 1;",
							"",
							"// Generate random string",
							"const random_str = Math.random().toString(32).substring(2);",
							"",
							"pm.collectionVariables.set(\"id\", random_num);",
							"pm.collectionVariables.set(\"username\", random_str);",
							"pm.collectionVariables.set(\"firstname\", random_str);",
							"pm.collectionVariables.set(\"lastname\", random_str);",
							"pm.collectionVariables.set(\"email\", `${random_str}@example.com`);",
							"pm.collectionVariables.set(\"password\", random_str);",
							"pm.collectionVariables.set(\"phone\", \"222222222\");",
							"pm.collectionVariables.set(\"userStatus\", 0);",
							"",
							"pm.collectionVariables.set(\"base_url\", \"https://petstore.swagger.io/v2\")"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"POST /user - status should be 200.\", () => {",
							"    pm.response.to.have.status(200); // Check if the status code is 200",
							"})",
							"",
							"pm.test(\"Content Type Header should include application/json.\", () => {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"})",
							"",
							"pm.test(\"Response time should be less than 2s.\", () => {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": \"{{id}}\",\n  \"username\": \"{{username}}\",\n  \"firstName\": \"{{firstname}}\",\n  \"lastName\": \"{{lastname}}\",\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\",\n  \"phone\": \"{{phone}}\",\n  \"userStatus\": \"{{userStatus}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/user",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user by name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"GET /user/username - status should be 200.\", () => {",
							"    pm.response.to.have.status(200); // Check if the status code is 200",
							"})",
							"",
							"pm.test(\"Content Type Header should include application/json.\", () => {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"})",
							"",
							"pm.test(\"Response time should be less than 2s.\", () => {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/{{firstname}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"{{firstname}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user by username",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let random_str = \"john\" + Math.random().toString(32).substring(2);",
							"",
							"pm.collectionVariables.set(\"email\", random_str + \"@gmail.com\");",
							"pm.collectionVariables.set(\"phone\", \"0123456789\");",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"PUT /user/username - status should be 200.\", () => {",
							"    pm.response.to.have.status(200); // Check if the status code is 200",
							"})",
							"",
							"pm.test(\"Content Type Header should include application/json.\", () => {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"})",
							"",
							"pm.test(\"Response time should be less than 2s.\", () => {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": \"{{id}}\",\n  \"username\": \"{{username}}\",\n  \"firstName\": \"{{firstname}}\",\n  \"lastName\": \"{{lastname}}\",\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\",\n  \"phone\": \"{{phone}}\",\n  \"userStatus\": \"{{userStatus}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/user/{{firstname}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user",
						"{{firstname}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user by username",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"DELETE /user/username - status should be 200.\", () => {",
							"    pm.response.to.have.status(200); // Check if the status code is 200",
							"})",
							"",
							"pm.test(\"Content Type Header should include application/json.\", () => {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"})",
							"",
							"pm.test(\"Response time should be less than 2s.\", () => {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"})",
							"",
							"pm.collectionVariables.unset(\"base_url\");",
							"pm.collectionVariables.unset(\"id\");",
							"pm.collectionVariables.unset(\"username\");",
							"pm.collectionVariables.unset(\"firstname\");",
							"pm.collectionVariables.unset(\"lastname\");",
							"pm.collectionVariables.unset(\"email\");",
							"pm.collectionVariables.unset(\"password\");",
							"pm.collectionVariables.unset(\"phone\");",
							"pm.collectionVariables.unset(\"userStatus\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/user/{{firstname}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user",
						"{{firstname}}"
					]
				}
			},
			"response": []
		}
	]
}